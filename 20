import React, { useState } from 'react';
import { GeneratedVideo } from './AppLayout';
import { MoreVertical, Eye, Download, Edit3, Trash2, Heart, Share2, Play, X } from 'lucide-react';

const VideoCard: React.FC<{ video: GeneratedVideo; onDelete: (id: string) => void }> = ({ video, onDelete }) => {
  const [menuOpen, setMenuOpen] = useState(false);
  const [viewing, setViewing] = useState(false);

  const formatNumber = (num: number) => {
    if (num >= 1000) return `${(num / 1000).toFixed(1)}K`;
    return num;
  };

  return (
    <>
      <div className="bg-gray-900/50 border border-gray-800 rounded-2xl overflow-hidden group relative">
        <div className="relative aspect-video">
          <img src={video.thumbnail_url} alt="Thumbnail" className="w-full h-full object-cover" />
          <div className="absolute inset-0 bg-black/20 flex items-center justify-center opacity-0 group-hover:opacity-100 transition-opacity">
            <button onClick={() => setViewing(true)} className="bg-white/20 backdrop-blur-sm p-3 rounded-full text-white">
              <Play className="w-6 h-6 ml-1" />
            </button>
          </div>
        </div>
        <div className="p-4">
          <p className="font-semibold truncate mb-2">{video.prompt || 'Vídeo sem prompt'}</p>
          <div className="flex justify-between items-center text-sm text-gray-400">
            <div className="flex items-center space-x-4">
              <span className="flex items-center space-x-1"><Eye className="w-4 h-4"/><span>{formatNumber(video.views)}</span></span>
              <span className="flex items-center space-x-1"><Heart className="w-4 h-4"/><span>{formatNumber(video.likes)}</span></span>
              <span className="flex items-center space-x-1"><Share2 className="w-4 h-4"/><span>{formatNumber(video.shares)}</span></span>
            </div>
            <div className="relative">
              <button onClick={() => setMenuOpen(!menuOpen)} className="p-1 rounded-full hover:bg-gray-700">
                <MoreVertical className="w-5 h-5" />
              </button>
              {menuOpen && (
                <div className="absolute right-0 bottom-full mb-2 w-48 bg-gray-800 border border-gray-700 rounded-lg shadow-lg z-10">
                  <button onClick={() => { setViewing(true); setMenuOpen(false); }} className="w-full text-left flex items-center space-x-2 px-4 py-2 hover:bg-gray-700"><Eye className="w-4 h-4"/><span>Visualizar</span></button>
                  <a href={video.video_url} download className="w-full text-left flex items-center space-x-2 px-4 py-2 hover:bg-gray-700"><Download className="w-4 h-4"/><span>Baixar</span></a>
                  <button className="w-full text-left flex items-center space-x-2 px-4 py-2 hover:bg-gray-700"><Edit3 className="w-4 h-4"/><span>Editar</span></button>
                  <button onClick={() => { onDelete(video.id); setMenuOpen(false); }} className="w-full text-left flex items-center space-x-2 px-4 py-2 text-red-400 hover:bg-gray-700"><Trash2 className="w-4 h-4"/><span>Eliminar</span></button>
                </div>
              )}
            </div>
          </div>
        </div>
      </div>
      {viewing && (
        <div className="fixed inset-0 bg-black/80 flex items-center justify-center z-50 p-4">
          <div className="relative w-full max-w-3xl">
            <button onClick={() => setViewing(false)} className="absolute -top-10 right-0 text-white bg-white/10 p-2 rounded-full"><X/></button>
            <video src={video.video_url} controls autoPlay className="w-full rounded-lg" />
          </div>
        </div>
      )}
    </>
  );
};

const Explore: React.FC<{ videos: GeneratedVideo[]; onDeleteVideo: (id: string) => void }> = ({ videos, onDeleteVideo }) => {
  return (
    <div className="space-y-8">
      <div>
        <h1 className="text-3xl font-bold mb-2">Explorar Criações</h1>
        <p className="text-gray-400">Navegue por todos os vídeos que você gerou.</p>
      </div>
      {videos.length > 0 ? (
        <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
          {videos.map(video => (
            <VideoCard key={video.id} video={video} onDelete={onDeleteVideo} />
          ))}
        </div>
      ) : (
        <div className="text-center py-20 bg-gray-900/50 border border-dashed border-gray-700 rounded-2xl">
          <h3 className="text-xl font-semibold">Nenhum vídeo encontrado</h3>
          <p className="text-gray-500 mt-2">Vá para a aba 'Gerar' para criar o seu primeiro vídeo!</p>
        </div>
      )}
    </div>
  );
};

export default Explore;
