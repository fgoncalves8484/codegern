import React from 'react';
import { GeneratedVideo } from './AppLayout';
import { BarChart3, Video, Heart, Share2, Eye } from 'lucide-react';

const StatCard: React.FC<{ icon: React.ReactNode; label: string; value: string | number; color: string }> = ({ icon, label, value, color }) => (
  <div className={`p-6 rounded-2xl bg-gray-900/50 border border-gray-800 flex items-center space-x-4`}>
    <div className={`p-3 rounded-full ${color}`}>
      {icon}
    </div>
    <div>
      <p className="text-gray-400 text-sm">{label}</p>
      <p className="text-3xl font-bold text-white">{value}</p>
    </div>
  </div>
);

const Dashboard: React.FC<{ videos: GeneratedVideo[] }> = ({ videos }) => {
  const totalViews = videos.reduce((sum, v) => sum + v.views, 0);
  const totalLikes = videos.reduce((sum, v) => sum + v.likes, 0);
  const totalShares = videos.reduce((sum, v) => sum + v.shares, 0);

  const formatNumber = (num: number) => {
    if (num >= 1000000) return `${(num / 1000000).toFixed(1)}M`;
    if (num >= 1000) return `${(num / 1000).toFixed(1)}K`;
    return num;
  };

  const topVideos = [...videos].sort((a, b) => b.views - a.views).slice(0, 5);

  return (
    <div className="space-y-8">
      <div>
        <h1 className="text-3xl font-bold mb-2">Dashboard</h1>
        <p className="text-gray-400">As suas estatísticas de criação num só lugar.</p>
      </div>

      <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-6">
        <StatCard icon={<Video className="w-6 h-6 text-white"/>} label="Vídeos Criados" value={videos.length} color="bg-blue-500" />
        <StatCard icon={<Eye className="w-6 h-6 text-white"/>} label="Total de Vistas" value={formatNumber(totalViews)} color="bg-green-500" />
        <StatCard icon={<Heart className="w-6 h-6 text-white"/>} label="Total de Gostos" value={formatNumber(totalLikes)} color="bg-pink-500" />
        <StatCard icon={<Share2 className="w-6 h-6 text-white"/>} label="Total de Partilhas" value={formatNumber(totalShares)} color="bg-yellow-500" />
      </div>

      <div>
        <h2 className="text-2xl font-bold mb-4">Top 5 Vídeos</h2>
        <div className="bg-gray-900/50 border border-gray-800 rounded-2xl overflow-hidden">
          {topVideos.length > 0 ? (
            topVideos.map((video, index) => (
              <div key={video.id} className="flex items-center p-4 space-x-4 border-b border-gray-800 last:border-b-0">
                <span className="text-lg font-bold text-gray-400 w-5">#{index + 1}</span>
                <img src={video.thumbnail_url} alt="Thumbnail" className="w-20 h-12 object-cover rounded-md" />
                <div className="flex-1">
                  <p className="font-semibold truncate">{video.prompt || 'Vídeo sem prompt'}</p>
                  <p className="text-sm text-gray-500">{new Date(video.created_at).toLocaleDateString()}</p>
                </div>
                <div className="flex items-center space-x-2 text-sm text-gray-300">
                  <Eye className="w-4 h-4 text-green-400" />
                  <span>{formatNumber(video.views)}</span>
                </div>
                <div className="flex items-center space-x-2 text-sm text-gray-300">
                  <Heart className="w-4 h-4 text-pink-400" />
                  <span>{formatNumber(video.likes)}</span>
                </div>
              </div>
            ))
          ) : (
            <p className="p-8 text-center text-gray-500">Ainda não tem vídeos para mostrar. Comece a criar!</p>
          )}
        </div>
      </div>
    </div>
  );
};

export default Dashboard;
